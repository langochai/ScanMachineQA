<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v23.1" name="DevExpress.Data.v23.1, Version=23.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="peImage.EditValue" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v23.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIzLjEsIFZlcnNpb249MjMuMS41
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAIYJAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgd2lkdGg9IjI1NnB0IiBo
        ZWlnaHQ9IjE5NHB0IiB2aWV3Qm94PSIwIDAgMjU2IDE5NCIgdmVyc2lvbj0iMS4wIiB4bWxucz0iaHR0
        cDovL3d3dy53My5vcmcvMjAwMC9zdmciPg0KICA8ZyBmaWxsPSJyZ2IoMSw4MSwxNTIpIiB0cmFuc2Zv
        cm09InRyYW5zbGF0ZSgwLCAxOTQpIHNjYWxlKDAuMSwgLTAuMSkiIHN0cm9rZT0ibm9uZSI+DQogICAg
        PHBhdGggZD0iTTEwNzUgMTgwNCBjLTEzMSAtMTA4IC0xMjQgLTk2IC03MSAtMTM1IDI1IC0xOSA0NSAt
        MzcgNDYgLTQwIDAgLTQgLTEzOCAtMTExIC0zMDcgLTIzOSAtMTcwIC0xMjggLTMxNCAtMjM4IC0zMjEg
        LTI0MyAtMTMgLTEwIC0yMSAtNiAtMTA4IDYwIGwtMzAgMjIgLTEwMyAtODYgLTEwNCAtODcgMzMgLTI2
        IGMxOSAtMTQgNDMgLTMzIDU0IC00MyBsMjEgLTE3IC0zNCAtMjggYy04MiAtNjUgLTg1IC00OCAzMCAt
        MTQ1IGwxMDMgLTg2IDMwIDIyIGMxNyAxMyA0NSAzNCA2MyA0NyBsMzIgMjMgMjkzIC0yMjEgYzE2MSAt
        MTIyIDMwNyAtMjMzIDMyMyAtMjQ2IGwzMCAtMjUgLTIzIC0xNiBjLTEzIC05IC0zNSAtMjcgLTQ5IC0z
        OSBsLTI2IC0yMiAxMDcgLTg4IDEwNyAtODcgNTEgNDEgYzI4IDIyIDU0IDQwIDU4IDQwIDQgMCAzMCAt
        MTggNTggLTQwIGw1MSAtNDEgMTA3IDg3IDEwNyA4OCAtMzkgMzMgYy0yMSAxOCAtNDIgMzMgLTQ2IDMz
        IC0yNiAwIDI0IDQyIDMwMCAyNTAgMTY5IDEyOCAzMTMgMjM4IDMyMCAyNDMgMTMgMTAgMjEgNiAxMDgg
        LTYwIGwzMSAtMjMgMTAzIDg3IGM5OCA4MyAxMDIgODggODMgMTAyIC0xMSA5IC0zNSAyOCAtNTQgNDQg
        bC0zNCAyNyAzNCAyOCBjMTkgMTUgNDMgMzQgNTQgNDIgMTggMTUgMTUgMjAgLTg0IDEwMyBsLTEwMyA4
        NiAtMzAgLTIyIGMtODcgLTY2IC05NSAtNzAgLTEwOCAtNjAgLTcgNSAtMTUxIDExNSAtMzIwIDI0MyAt
        Mjc2IDIwOCAtMzI2IDI1MCAtMzAwIDI1MCA0IDAgMjUgMTUgNDYgMzMgbDM5IDMzIC0xMDcgODggLTEw
        NyA4NyAtNTEgLTQxIGMtMjggLTIyIC01NCAtNDAgLTU4IC00MCAtNCAwIC0zMCAxOCAtNTggNDAgLTI3
        IDIyIC01MSA0MCAtNTMgMzkgLTIgMCAtNDQgLTM0IC05NCAtNzV6IG0zOTMgLTQ4NCBjMTAwIC03NCAx
        ODEgLTEzOCAxODIgLTE0MiAwIC01IC0xNjYgLTggLTM3MCAtOCAtMjAzIDAgLTM3MCAzIC0zNzAgOCAx
        IDkgMzYzIDI4MSAzNzEgMjc5IDMgLTEgODggLTYzIDE4NyAtMTM3eiBtLTU5OCAtMTg1IGMwIC0zIC05
        IC0yNCAtMjAgLTQ1IGwtMjAgLTQwIC05MCAwIGMtNzMgMCAtOTAgLTMgLTkwIC0xNSAwIC0xMiAxNSAt
        MTUgNzggLTE1IDEwNyAwIDEwOSAtMiA5NCAtOTEgLTcgLTQwIC0xOCAtODQgLTI1IC05OCBsLTEyIC0y
        NiAtMTczIC0zIC0xNzIgLTIgMjIgNDUgMjIgNDUgOTggMCBjOTEgMCA5OCAxIDk4IDIwIDAgMTggLTcg
        MjAgLTc5IDIwIC0xMDggMCAtMTEzIDYgLTkyIDEwMyAyNCAxMTEgMTcgMTA3IDIwMiAxMDcgODggMCAx
        NTkgLTIgMTU5IC01eiBtMTM1IC01MiBjMyAtMzIgOSAtNzggMTMgLTEwMSBsNyAtNDQgNTAgMTAxIDQ5
        IDEwMSA2MyAwIGMzNSAwIDYzIC0zIDYzIC03IDAgLTMgLTQzIC04MCAtOTcgLTE3MCBsLTk2IC0xNjQg
        LTY2IDMgLTY2IDMgLTcgODAgYy0xMyAxNTQgLTE2IDE2NSAtNDQgMTY1IC0yOSAwIC0yOSAxIC00IDUw
        IDIwIDM5IDIyIDQwIDc0IDQwIGw1NSAwIDYgLTU3eiBtMzc5IDIwIGMzIC0yMSA2IC01NyA2IC04MCAw
        IC0yNCAzIC00MyA4IC00MyA0IDAgMjAgMzYgMzcgODAgbDI5IDgwIDQyIDAgYzQzIDAgNDMgMCA0OCAt
        NDIgNCAtMjQgNyAtNjMgOSAtODggbDIgLTQ1IDM1IDg1IDM1IDg1IDY4IDMgYzM3IDIgNjcgMSA2NyAt
        MiAwIC0yIC0zNiAtNzkgLTc5IC0xNzAgbC04MCAtMTY2IC02NCAwIC02NSAwIC03IDUzIC04IDUyIC0y
        NiAtNTMgLTI2IC01MyAtNTUgMyAtNTUgMyAtNyA3MCBjLTE5IDE4MSAtMTcgMTc1IC00NCAxNzUgLTI5
        IDAgLTI5IDEgLTQgNTAgMjAgMzkgMjIgNDAgNzQgNDAgbDUzIDAgNyAtMzd6IG03MjYgMzIgYzAgLTMg
        LTkgLTI0IC0yMCAtNDUgbC0yMCAtNDAgLTkwIDAgYy03MyAwIC05MCAtMyAtOTAgLTE1IDAgLTEyIDE1
        IC0xNSA3OCAtMTUgMTA3IDAgMTA5IC0yIDk0IC05MSAtNyAtNDAgLTE4IC04NCAtMjUgLTk4IGwtMTIg
        LTI2IC0xNzMgLTMgLTE3MiAtMiAyMiA0NSAyMiA0NSA5OCAwIGM5MSAwIDk4IDEgOTggMjAgMCAxOCAt
        NyAyMCAtNzcgMjAgLTEwOCAwIC0xMTAgMiAtOTUgOTIgMjEgMTIyIDE1IDExOCAyMDIgMTE4IDg4IDAg
        MTYwIC0yIDE2MCAtNXogbS00NTIgLTM2NCBjLTEgLTYgLTg3IC03MyAtMTkwIC0xNTEgbC0xODggLTE0
        MCAtMTg3IDE0MCBjLTEwNCA3OCAtMTg5IDE0NSAtMTkxIDE1MSAtMiA1IDE0NCA5IDM3OCA5IDIzNCAw
        IDM4MCAtNCAzNzggLTl6IiAvPg0KICA8L2c+DQo8L3N2Zz4L
</value>
  </data>
</root>